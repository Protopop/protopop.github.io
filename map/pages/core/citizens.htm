<!DOCTYPE HTML>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
</meta>
<title>Nimia</title>
<style type="text/css">
.fullPageContent .cardBack .cardSubTitle {
	top: 140px;
	width: 280px;
	left: 25px;
	line-height: 1.5;
	font-size: 20px;
}

.fullPageContent .cardButton {
	font-size: 16px;
}

.fullPageContent .cardBack .portrait {
	opacity: 0.4;
}

.dialogueBar {
	position: fixed;
	right: 50%;
	top: 50%;
	margin-right: -50px;
	margin-top: -150px;
	display: none;
}

.positiveTalk {
	position: absolute;
	top: 250px;
}

.fullPageContent .cardKarma {
	left: 275px;
}

.negativeTalk {
	position: absolute;
	top: 250px;
	right: 30px;
}

.crossed {
	background-image: url(assets/img/crossed.png);
	height: 460px;
	width: 330px;
	position: absolute;
	z-index: 8;
	left: 0px;
	top: 0px;
	display: none;
}

.belowCard {
	display: none;
	top: 380px;
	text-decoration: none;
}


</style>
</head>
<body>
<div class="fullPageContent"> 
		<script type="text/javascript">
		 hideCards();
$('.damageBar').css('height', 0);
$('.friendBar').css('height', 0);

$('.openQuestAction').hide();

function setVote(i){
	//alert(i);
	
	for (var j = 0, k = completedQuests.length; j < k; j++) {
        // if (containsObject(currentLocation.citizens[i].name, completedQuests[j])) {
        if (currentLocation.citizens[i].name == completedQuests[j].name) {
            setNationalGoal(i, cAlignment);
            $('.citizen0' + (i + 1) + ' .cardFront .vote').removeClass('voteblank');
            $('.citizen0' + (i + 1) + ' .cardFront .vote').addClass('voted');
            $('.citizen0' + (i + 1) + ' .friendBar').css('height', 450);
			
			if(agentIsHostile(currentLocation.citizens[i].name) == true){
				
				 $('.citizen0' + (i + 1) + ' .cardFront .vote').css('opacity',0);
			}

        } else {
            var np = 0;
        }
    }
}


function setNationalGoal(i, cAlignment) {

    //findit
    var cG = eval('nationalGoalEconomy.' + currentLocation.alignment.toLowerCase());

    cG = currentAdventure.title;

    var supportStatus = 'Supports';

    var enemyArray = eval('enemyAlignment.' + cAlignment.toLowerCase());

    //var enemyArray = eval('enemyAlignment.'+ currentAdventure.alignment.toLowerCase());

    //alert(enemyArray+"   "+currentAdventure.alignment);

    for (var j = 0, k = enemyArray.length; j < k; j++) {
        // alert(cAlignment.toLowerCase()+"  "+enemyArray[j].toLowerCase());
        // if(currentLocation.alignment.toLowerCase()== enemyArray[j].toLowerCase()){

        if (currentAdventure.alignment.toLowerCase() == enemyArray[j].toLowerCase()) {
            // alert("enenmy");
            supportStatus = "Opposes";
        }
    }


    $('.citizen0' + (i + 1) + ' .cardFront .disposition').html(supportStatus + " " + cG);


}
//addTakeQuestCard();

var citizenQuest = {};

for (var i = 0; i < currentLocation.citizens.length; i++) {


    var outlook = "";

    var cAlignment = currentLocation.citizens[i].alignment;
    var cSphere = currentLocation.citizens[i].sphere;

    var outlook = calculateOutlook(cSphere, cAlignment);


    $('.citizen0' + (i + 1) + ' .cardFront .cardSubTitle').html(cAlignment + " " + currentLocation.citizens[i].career + "&nbsp;&nbsp;●&nbsp;&nbsp;" + currentLocation.citizens[i].sphere + "&nbsp;&nbsp;●&nbsp;&nbsp;Level " + currentLocation.citizens[i].level);
    $('.citizen0' + (i + 1) + ' .cardTitle').html(currentLocation.citizens[i].name);

    currentLocation.citizens[i].description ? $('.citizen0' + (i + 1) + ' .cardBack .cardSubTitle').html(currentLocation.citizens[i].description) : null;

    $("#cardSet" + (i + 1) + " img.portrait").attr("src", "assets/img/portrait/" + currentLocation.citizens[i].species.toLowerCase() + "/" + currentLocation.citizens[i].career.toLowerCase() + currentLocation.citizens[i].gender.toLowerCase() + ".png");
    $('.citizen0' + (i + 1) + ' .cardBack .disposition').html("<span style='font-size:12px;'>Believes in</span></br>" + outlook);
    if (currentLocation.citizens[i].img) {
        $("#cardSet" + (i + 1) + " img.portrait").attr("src", "assets/img/portrait/citizen/" + currentLocation.citizens[i].img.toLowerCase() + ".png");
    }
    $('.citizen0' + (i + 1) + ' .cardHeart').html(currentLocation.citizens[i].health);

    $('.citizen0' + (i + 1) + ' .cardKarma').html(currentLocation.citizens[i].karma);
    //$('.citizen0'+(i+1)+' .cardBack .cardSubTitle').html("");

    
    if (currentQuest.boss) {
		//alert(currentQuest.boss.name +"    "+currentLocation.citizens[i].name);
        if (currentQuest.boss.name == currentLocation.citizens[i].name && currentQuest.completed == false) {

            showToolTipTarget(eval("$('.citizen0'+(i+1)+' .cardFront')"), 'Quest Target', false, false);
			
			$('.citizen0'+(i+1)+' .cardFront').addClass('glow');
			
			//$('.openQuestAction').show();
			
			var cst = "";
			
			if(runeDeckArray[0].cost){
				//alert(currentLocation.citizens[i].level);
				cst = " "+(runeDeckArray[0].cost*currentLocation.citizens[i].level)+" gold";
				
			}
			
			var cst2 = "";
			
			if(runeDeckArray[0].name.toLowerCase() == 'kill'){
				cst2 = " "+currentQuest.boss.name;
				
			}
			
			//console.table(runeDeckArray);
			
			$('.openQuestAction').html("<a href='#'  onClick='useAction(1)')><span style='display: block;font-size: 12px;text-transform: none;position: absolute;width: 100%;top: -22px;line-height: 35px;text-shadow: none;color: rgb(51, 51, 51);'>"+currentQuest.giver+"'s Quest<span></br><span style='display:block;font-size:18px;text-transform:none;color:#ffffff;'>"+currentQuest.actionName+cst+cst2+"</span></a>");
			
			
	
        } else if (currentQuest.giver == currentLocation.citizens[i].name && currentQuest.completed == true) {

            showToolTipTarget(eval("$('.citizen0'+(i+1)+' .cardFront')"), 'Quest Target', false, false);
			
			$('.citizen0'+(i+1)+' .cardFront').addClass('glow');
			
			
	
        }
    }

    // CHECK FOR QUEST COMPLETION




    setNationalGoal(i, cAlignment);




    // alert(currentLocation.citizens[i].name);
    if (containsObject(currentLocation.citizens[i].name, friendlyCitizens)) {
        $('.citizen0' + (i + 1) + ' .cardFront .disposition').html('Friendly');
        $('.citizen0' + (i + 1) + ' .friendBar').css('height', 450);
    } else {
        var np = 0;
        //$('.citizen0'+(i+1)+' .friendBar').css('height', 450);
    }


    // alert(currentLocation.citizens[i].name);

    setVote(i);




    if (containsObject(currentLocation.citizens[i].name, hostileCitizens)) {
        $('.citizen0' + (i + 1) + ' .cardFront .disposition').html('Hostile');


        $('.citizen0' + (i + 1) + ' .friendBar').css('height', 0);
        $('.citizen0' + (i + 1) + ' .damageBar').css('height', 450);
    } else {
        var np = 0;
        //$('.citizen0'+(i+1)+' .friendBar').css('height', 450);
    }


    // CHECK FOR DEAD AGENTS
    for (var j = 0, k = deadAgents.length; j < k; j++) {
        // alert(deadAgents[j]);
        if (currentLocation.citizens[i].name == deadAgents[j]) {
            $('.citizen0' + (i + 1) + ' .cardFront .disposition').html('Deceased');
            $('.citizen0' + (i + 1) + ' .cardFront .vote').removeClass('voteblank');
            $('.citizen0' + (i + 1) + ' .cardFront .vote').addClass('votedead');


            $('.citizen0' + (i + 1) + ' .cardFront .damageBar').css('height', '450px');
            $('.citizen0' + (i + 1) + ' .cardFront').removeAttr('onmousedown');
            //alert(currentQuest.boss.name+"   "+currentLocation.citizens[i].name);
            // if(currentLocation.citizens[i].name == currentQuest.boss.name){
            //$('.citizen0'+(j+1)+' .cardFront .disposition').html('Friendly');

            // }


        }




        //   }




    }
}
organizeCitizens();

var currentSpeaker = 1;
pickOne = true;
cardsFlipped = 0;
$('.cityNam').text(currentLocation.name.substring(0, currentLocation.name.length - 1));


if (firstCitizen == false) {
    popMessage("Citizens live in CITIES and VILLAGES. You can Speak to citizens to obtain QUESTS. ", "Citizens & Quests");
    firstCitizen = true;

}

$('.frontStats').hide();
console.log("current quest : "+currentQuest.name);
//alert(completedQuests);
	 
	 
    </script>
		<div class="fullPageTitle"> Citizens of <span class="cityNam">City</span></div>
		<a class="closeStage" onClick="closeStage();"> X </a>
		
		<div class="tipBubbleTarget" onClick="$(this).hide();"><span class="tipBubbleTextTarget">welcome</span><span class="tipBubbleCloseTarget">x</span><span class="tipBubblePointerTarget"></span></div>



		<div class="dialogueBar"> <!--<a class="cardButtonQuest " href="#" onClick="closeStage();startQuest(citizenQuest);addActionCard();saveGame()">Accept Quest</a>--> </div>
		<div class="flipCard citizen01 drawCard" id="cardSet1"> <a class="cardButtonNeutral belowCard" href="#" onClick="closeDialogue(1);">Switch Citizens</a>
				<div class="card cardFront  smooth"  onMouseDown="flipCardsPlain(1);currentSpeaker = 1;">
						<div class="crossed"></div>
						<div class="vote voteblank"></div>
						<span class='beastCard'> <span class="frontStats">
						<div class='cardHeart'>15</div>
						<div class='cardKarma'>15</div>
						</span>
						<div class='miss'></div>
						<div class='splat'></div>
						<div class='scratch'></div>
						<div class='damaged'></div>
						<div class='damagedExtra'></div>
						<div class='damageBar'></div>
						<div class='friendBar'></div>
						<div class="disposition"> Indifferent </div>
						<div class="cardTitle"> Mer Paladine </div>
						<div class="cardSubTitle" style="top: 380px;"> Level 20 Honorable Rook </div>
						<img src="assets/img/blank.png" width="320" height="400" class="portrait"/> </div>
				<div class="card cardBack smooth" onClick="unflipCards();">
						<div class='cardHeart'> 15 </div>
						<div class='cardKarma'> 15 </div>
						<div class="disposition"> Hostile </div>
						<div class="cardTitle"> Mer Paladine </div>
						<div class="cardSubTitle"> </div>
						
						<img src="assets/img/portrait/citizen/merpaladine.png" width="320" height="400" class="portrait"/> <a class="cardButton" onClick="openDialogue(1);"> Speak </a> </div>
		</div>
		<div class="flipCard citizen02 drawCard" id="cardSet2"> <a class="cardButtonNeutral belowCard" href="#" onClick="closeDialogue(2);">Switch Citizens</a>
				<div class="card cardFront smooth"  onMouseDown="flipCardsPlain(2);currentSpeaker = 2;">
						<div class="crossed"></div>
						<div class="vote voteblank"></div>
						<span class='beastCard'> <span class="frontStats">
						<div class='cardHeart'>15</div>
						<div class='cardKarma'>15</div>
						</span>
						<div class='miss'></div>
						<div class='splat'></div>
						<div class='scratch'></div>
						<div class='damaged'></div>
						<div class='damagedExtra'></div>
						<div class='damageBar'></div>
						<div class='friendBar'></div>
						<div class="cardTitle"> Fritz Dandy </div>
						<div class="disposition"> Indifferent </div>
						<div class="cardSubTitle" style="top: 380px;"> Rebel Seer </div>
						<!--<div class="disposition"> Indifferent </div>--> 
						<img src="assets/img/blank.png" width="320" height="400" class="portrait"/> </span></div>
				<div class="card cardBack smooth" onClick="unflipCards();">
						<div class='cardHeart'> 15 </div>
						<div class='cardKarma'> 15 </div>
						<div class="disposition"> Hostile </div>
						<div class="cardTitle"> Fritz Dandy </div>
						<!--<img class='cardPath' height='40' src='assets/img/paths/spirit.png' width='40'>-->
						<div class="cardSubTitle"> </div>
						
						<a class="cardButton" onClick="openDialogue(2);"> Speak </a> <img src="assets/img/portrait/citizen/fritzdandy.png" width="320" height="400" class="portrait"/> </div>
		</div>
		<div class="flipCard citizen03 drawCard" id="cardSet3"> <a class="cardButtonNeutral belowCard" href="#" onClick="closeDialogue(3);">Switch Citizens</a>
				<div class="card cardFront smooth"  onMouseDown="flipCardsPlain(3);currentSpeaker = 3;">
						<div class="crossed"></div>
												<div class="vote voteblank"></div>

						<span class='beastCard'> <span class="frontStats">
						<div class='cardHeart'>15</div>
						<div class='cardKarma'>15</div>
						</span>
						<div class='miss'></div>
						<div class='splat'></div>
						<div class='scratch'></div>
						<div class='damaged'></div>
						<div class='damagedExtra'></div>
						<div class='damageBar'></div>
						<div class='friendBar'></div>
						<div class="cardTitle"> Pilotine </div>
						<div class="disposition"> Indifferent </div>
						<div class="cardSubTitle" style="top: 380px;"> Neutral Rook </div>
						<!--<div class="disposition"> Friendly </div>--> 
						<img src="assets/img/blank.png" width="320" height="400" class="portrait"/> </div>
				<div class="card cardBack smooth" onClick="unflipCards();">
						<div class='cardHeart'> 15 </div>
						<div class='cardKarma'> 15 </div>
						<div class="disposition"> Hostile </div>
						<div class="cardTitle"> Pilotine </div>
						<!--<img class='cardPath' height='40' src='assets/img/paths/spirit.png' width='40'>-->
						<div class="cardSubTitle"> Pilotine, quiet and lovelorn, pines for Saroo in Nanja while he ensures the safety of Bresk as its Man at Arms </div>
						
						<a class="cardButton" onClick="openDialogue(3);"> Speak </a> <img src="assets/img/portrait/citizen/pilotine.png" width="320" height="400" class="portrait"/> </div>
		</div>
</div>
</body>
</html>
